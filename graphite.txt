Graphite(Performance)
https://www.digitalocean.com/community/tutorials/an-introduction-to-tracking-statistics-with-graphite-statsd-and-collectd

# Collecting stats about your servers, applications, and traffic for PERFORMANCE is a good idea.
# Collecting and organizing data can give you confidence in your decisions about scaling, troubleshooting, 
	and tracking down pain-points in your configurations.
# Hook these tools together to create a system for gathering, recording, and displaying the results.
# collect, store, and visualize the data generated by your servers and applications.

Tracking Statistics with Graphite, StatsD, and CollectD
# Graph
	1. Graphite 
		graphing library responsible for storing and rendering visual representations of data. 
		Carbon is the storage backend for a Graphite configuration.
		Whisper is a database library that Graphite uses to store the information that it is sent.
		
	2. Grafana 
		is a feature rich metrics dashboard which integrates well with InfluxDB. Grafana will 
		give us the capacity to create dashboards which provide system overviews and are suitable 
		for sharing or using as wall displays.	
		
# Stats Gathering and Delivery		
	2. Collectd 
		a system statistics daemon that can collect near-realtime information about a running server
		It's helpful in maintaining an overview of available resources to detect existing or looming bottlenecks.
		collectd gathers metrics from various sources, e.g. the operating system, applications, logfiles 
		and external devices, and stores this information or makes it available over the network. 
		Those statistics can be used to monitor systems, find performance bottlenecks (i.e. performance analysis)
		and predict future system load (i.e. capacity planning). Or if you just want pretty graphs of your private 
		server and are fed up with some homegrown solution you're at the right place, too ;).
		
	3. StatsD   
		a flexible statistics aggregator that can be used to collect and organize arbitrary data.
		StatsD is a simple NodeJS daemon that listens for messages on a UDP port.
		It parses the messages, extracts metrics data, and periodically flushes the data to graphite.
	
	4 Carbon
		Carbon is the storage backend for a Graphite configuration. A single Graphite configuration will 
		have one or more Carbon daemons that are responsible for handling data that is sent over by other 
		processes that collect and transmit statistics (the collectors are not part of Graphite).
	
	5. Whisper
		Whisper is a database library that Graphite uses to store the information that it is sent.
		It is very flexible and allows time-series data to be stored in great detail. It creates different 
		archives at different levels of detail, so that in practical usage, the information gracefully 
		degraded into lower resolutions when it passes certain configured aging thresholds.	
		
# Database	
	1. InfluxDB 
	is a time series, metrics, and analytics database. Time series databases are designed to address 
	the problem of storing data resulting from successive measurements made over a period of time. 
	This data may consist of items such as system metrics (like CPU and memory usage) and application 
	metrics (like application errors and REST endpoint calls).

	The longer a system operates, the greater the amount of data accumulated. InfluxDB provides a solution 
	for efficiently storing this data. It is targeted at use cases for DevOps, metrics, sensor data, and 
	real-time monitoring and analytics. Using InfluxDB, you can quickly build a powerful real time monitoring 
	framework which also provides historical analysis.


	
	


				
# Docker image
	https://github.com/hopsoft/docker-graphite-statsd
	
$ docker -v
	Docker version 1.12.3, build 6b644ec (12/2016)
	
#------------------------------------	
docker run -d\
 --name graphite\
 --restart=always\
 -p 80:80\
 -p 2003-2004:2003-2004\
 -p 2023-2024:2023-2024\
 -p 8125:8125/udp\
 -p 8126:8126\
 hopsoft/graphite-statsd
#------------------------------------
root/root
#------------------------------------

Nginx 	 - reverse proxies the graphite dashboard
Graphite - front-end dashboard
Carbon   - back-end
Statsd   - UDP based back-end proxy
#------------------------------------
### Mapped Ports
Host	Container	Service
80	80	nginx
2003	2003	carbon receiver - plaintext
2004	2004	carbon receiver - pickle
2023	2023	carbon aggregator - plaintext
2024	2024	carbon aggregator - pickle
8125	8125	statsd
8126	8126	statsd admin
#------------------------------------
### Mounted Volumes
Host	Container	Notes
DOCKER ASSIGNED	/opt/graphite/conf	graphite config
DOCKER ASSIGNED	/opt/graphite/storage	graphite stats storage
DOCKER ASSIGNED	/etc/nginx	nginx config
DOCKER ASSIGNED	/opt/statsd	statsd config
DOCKER ASSIGNED	/etc/logrotate.d	logrotate config
DOCKER ASSIGNED	/var/log	log files
#------------------------------------

















































